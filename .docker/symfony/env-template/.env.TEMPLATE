# Environment Variables Template for SubjectsPlus Symfony Application
#
# Instructions:
#
# 1. Copy this file to create your environment-specific configuration file
#    Example: cp .env.TEMPLATE .env.symfony.dev.local
#
# 2. Replace all placeholder values with your actual configuration values
#    - For secrets and passwords, use strong, unique values
#    - For URLs and domains, use your actual environment URLs
#    - For database connections, use your actual credentials
#
# 3. Never commit files containing real secrets to version control
#    - Add your actual .env files to .gitignore
#    - Only this template file should be version controlled
#
# 4. Environment file naming convention:
#    - .env.symfony.<deployment>.<environment>
#    - Examples: .env.symfony.calder.dev, .env.symfony.richter.prod
#
# 5. For Docker environments, ensure container names and ports match your docker-compose.yml

###> symfony/framework-bundle ###
APP_ENV=dev
APP_SECRET=CHANGE_THIS_TO_A_STRONG_RANDOM_SECRET_32_CHARS_MIN
###< symfony/framework-bundle ###

###> Admin email used for twig extension AdminEmailExtension ###
ADMIN_EMAIL=admin@yourdomain.com
###< AdminEmailExtension ###

###> Application authentication type ###
APP_AUTH_TYPE=basic

###> doctrine/doctrine-bundle ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
#
# For local development (non-Docker):
# DATABASE_URL="mysql://username:password@localhost:3306/database_name?serverVersion=5.7"
#
# For Docker environments:
# DATABASE_URL="mysql://username:password@container_name:port/database_name?serverVersion=5.7"
#
# Replace the variables below with actual values:
DATABASE_URL="mysql://your_db_user:your_db_password@your_db_host:3306/your_database_name?serverVersion=5.7"
DATABASE_PASSWORD=your_database_password_here
###< doctrine/doctrine-bundle ###

###> nelmio/cors-bundle ###
CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$'
###< nelmio/cors-bundle ###

###> Azure MySQL SSL Configuration ###
AZURE_MYSQL_SSL_CERT_PATH=""

###> Trusted Proxies (comma-separated IPs or CIDR) ###
TRUSTED_PROXIES=""

###> Blackboard LTI 1.3 Integration ###
# Obtain these values from your Blackboard Learn administration panel
BLACKBOARD_CLIENT_ID=your_blackboard_client_id_here
BLACKBOARD_DEPLOYMENT_ID=your_blackboard_deployment_id_here
BLACKBOARD_KID=your_blackboard_key_id_here
BLACKBOARD_PRIVATE_KEY_FILE_PATH=/path/to/your/blackboard/private/key.pem
###< blackboard lti 1.3 integration ###

###> SAML OneLogin Integration ###
SAML_ENABLED=false
###< Saml onelogin ###

###> Security Matcher ###
# This section is used to define security matchers for the environment.
# It allows the application to determine which domain is requesting authentication.
# The matcher is configured in src/Security/Matcher/EnvRequestMatcher.php.
SECURITY_MATCHER_DOMAIN=localhost
###< Security Matcher ###

###> Canvas LTI 1.3 Integration ###
# Your institution's Canvas base URL (MUST match the iss claim exactly)
CANVAS_ISSUER=https://your-canvas-instance.instructure.com

# Canvas OAuth2 endpoints for your instance
CANVAS_AUTH_LOGIN_URL=https://your-canvas-instance.instructure.com/api/lti/authorize_redirect
CANVAS_AUTH_TOKEN_URL=https://your-canvas-instance.instructure.com/login/oauth2/token
CANVAS_KEY_SET_URL=https://your-canvas-instance.instructure.com/api/lti/security/jwks

# Values from the Canvas Developer Key (LTI Key) you create in Canvas
CANVAS_CLIENT_ID=your_canvas_client_id_here
CANVAS_DEPLOYMENT_ID=your_canvas_deployment_id_here

# Use same key pair as Blackboard or a new one (either is fine)
# If you want to reuse the Blackboard key, just point this to the same path.
CANVAS_PRIVATE_KEY_FILE_PATH=/path/to/your/canvas/private/key.pem
CANVAS_KID=your_canvas_key_id_here
###< canvas lti 1.3 integration ###